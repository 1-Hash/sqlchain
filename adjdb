#!/usr/bin/env python
#
# Convert address format to binary in bitcoin.db

import sys, hashlib, binascii
import sqlite3 as db
import mmh3

alphabet="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"

def b58bin(v):

    long_value = 0L
    for (i, c) in enumerate(v[::-1]):
      long_value += alphabet.find(c) * (58**i)
     
    result = ''
    while long_value >= 256:
      div, mod = divmod(long_value, 256)
      result = chr(mod) + result
      long_value = div
    result = chr(long_value) + result
     
    nPad = 0
    for c in v:
      if c == alphabet[0]: nPad += 1
      else: break
     
    result = chr(0)*nPad + result
    
    return buffer(result[1:-4])
    
def mkaddr(v):
    pad = ''
    an = chr(0) + str(v)
    for c in an:
        if c == '\0': pad += '1'
        else: break
    num = long((an + hashlib.sha256(hashlib.sha256(an).digest()).digest()[0:4]).encode('hex'), 16)
    out = ''
    while num >= 58:
        num,m = divmod(num, 58)
        out = alphabet[m] + out
    return pad + alphabet[num] + out    

    
if __name__ == '__main__':
    

    try:
                                    
        with db.connect('bitcoin.db') as sql:
            #sql.create_function("b58bin", 1, b58bin)
            #sql.create_function("mkaddr", 1, mkaddr)
            sql.create_function("mmh3", 1, mmh3.hash)
            cur = sql.cursor()
            #cur.execute("update outaddr set addr_id=mmh3(address) where 1;")
            #cur.execute("insert into address (hash,addr) select addrhash,'xxx' from outputs where 1; ")
            #cur.execute("select mmh3(address),address from outputs where 1 limit 30;")
            #for x in cur:
            #    print x[0], x[1]
            

    except KeyboardInterrupt:
        sys.exit(0)
